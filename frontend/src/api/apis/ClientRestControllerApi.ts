/* tslint:disable */
/* eslint-disable */
/**
 * Application API
 * desc
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: test@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ClientCreateRequest,
  ClientPreview,
} from '../models';
import {
    ClientCreateRequestFromJSON,
    ClientCreateRequestToJSON,
    ClientPreviewFromJSON,
    ClientPreviewToJSON,
} from '../models';

export interface DeleteRequest {
    id: number;
}

export interface CreateRequest {
    createRequest: ClientCreateRequest;
}

/**
 * 
 */
export class ClientRestControllerApi extends runtime.BaseAPI {

    /**
     */
    async _deleteRaw(requestParameters: DeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling _delete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/clients/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async _delete(requestParameters: DeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this._deleteRaw(requestParameters, initOverrides);
    }

    /**
     */
    async createRaw(requestParameters: CreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<number>> {
        if (requestParameters.createRequest === null || requestParameters.createRequest === undefined) {
            throw new runtime.RequiredError('createRequest','Required parameter requestParameters.createRequest was null or undefined when calling create.');
        }

        const queryParameters: any = {};

        if (requestParameters.createRequest !== undefined) {
            queryParameters['createRequest'] = requestParameters.createRequest;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/clients`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     */
    async create(requestParameters: CreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<number> {
        const response = await this.createRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getByCurrentUserRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ClientPreview>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/clients`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ClientPreviewFromJSON));
    }

    /**
     */
    async getByCurrentUser(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ClientPreview>> {
        const response = await this.getByCurrentUserRaw(initOverrides);
        return await response.value();
    }

}
